{"version":3,"sources":["FormattedDate.js","WeatherIcon.js","WeatherTemperature.js","WeatherInfo.js","WeatherForecastDay.js","WeatherForecast.js","Weather.js","Link.js","App.js","reportWebVitals.js","index.js"],"names":["FormattedDate","props","day","date","getDay","hours","getHours","concat","minutes","getMinutes","React","createElement","WeatherIcon","ReactAnimatedWeather","icon","01d","01n","02d","02n","03d","03n","04d","04n","09d","09n","10d","10n","11d","11n","13d","13n","50d","50n","code","color","size","animate","WeatherTemperature","className","Math","round","celsius","WeatherInfo","data","city","description","temperature","humidity","wind","WeatherForecastDay","Date","dt","weather","temp","max","maxTemperature","min","minTemperature","WeatherForecast","_useState","useState","_useState2","_slicedToArray","loaded","setLoaded","_useState3","_useState4","forecast","setForecast","handleResponse","response","daily","useEffect","coordinates","map","dailyForecast","index","key","longitude","lon","latitude","lat","apiUrl","axios","get","then","load","Weather","ready","weatherData","setWeatherData","defaultCity","setCity","coord","main","speed","name","search","onSubmit","event","preventDefault","type","placeholder","autoFocus","onChange","target","value","Link","href","rel","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.fdb15d0f.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function FormattedDate(props) {\n  let days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  let day = days[props.date.getDay()];\n  let hours = props.date.getHours();\n  if (hours < 10) {\n    hours = `0${hours}`;\n  }\n\n  let minutes = props.date.getMinutes();\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n  return (\n    <div>\n      {day} {hours}:{minutes}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactAnimatedWeather from \"react-animated-weather\";\n\nexport default function WeatherIcon(props) {\n  const codeMapping = {\n    \"01d\": \"CLEAR_DAY\",\n    \"01n\": \"CLEAR_NIGHT\",\n    \"02d\": \"PARTLY_CLOUDY_DAY\",\n    \"02n\": \"PARTLY_CLOUDY_NIGHT\",\n    \"03d\": \"PARTLY_CLOUDY_DAY\",\n    \"03n\": \"PARTLY_CLOUDY_NIGHT\",\n    \"04d\": \"CLOUDY\",\n    \"04n\": \"CLOUDY\",\n    \"09d\": \"RAIN\",\n    \"09n\": \"RAIN\",\n    \"10d\": \"RAIN\",\n    \"10n\": \"RAIN\",\n    \"11d\": \"RAIN\",\n    \"11n\": \"RAIN\",\n    \"13d\": \"SNOW\",\n    \"13n\": \"SNOW\",\n    \"50d\": \"FOG\",\n    \"50n\": \"FOG\",\n  };\n\n  return (\n    <ReactAnimatedWeather\n      icon={codeMapping[props.code]}\n      color=\"#1e1e1e\"\n      size={props.size}\n      animate={true}\n    />\n  );\n}\n","import React from \"react\";\n\nexport default function WeatherTemperature(props) {\n  return (\n    <div className=\"WeatherTemperature\">\n      <span className=\"temperature\">{Math.round(props.celsius)}</span>\n      <span className=\"unit\">°C</span>\n    </div>\n  );\n}\n","import React from \"react\";\nimport FormattedDate from \"./FormattedDate\";\nimport WeatherIcon from \"./WeatherIcon\";\nimport WeatherTemperature from \"./WeatherTemperature\";\n\nexport default function WeatherInfo(props) {\n  return (\n    <div className=\"weather-info\">\n      <h1>{props.data.city}</h1>\n      <ul className=\"weather-list\">\n        <li>\n          <FormattedDate date={props.data.date} />\n        </li>\n        <li className=\"text-capitalize\">{props.data.description}</li>\n      </ul>\n      <div className=\"row mt-3\">\n        <div className=\"col-md-6 col-sm-12\">\n          <div className=\"temp-description\">\n            <div className=\"descr-left\">\n              <WeatherIcon code={props.data.icon} size={60} />\n            </div>\n\n            <div className=\"descr-right\">\n              <WeatherTemperature celsius={props.data.temperature} />\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-6 col-sm-012\">\n          <ul className=\"weather-list\">\n            <li>Humidity: {props.data.humidity}%</li>\n            <li>Wind: {props.data.wind} km/h</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport WeatherIcon from \"./WeatherIcon\";\n\nexport default function WeatherForecastDay(props) {\n  function maxTemperature() {\n    let temperature = Math.round(props.data.temp.max);\n    return `${temperature}°`\n  }\n   function minTemperature() {\n    let temperature = Math.round(props.data.temp.min);\n    return `${temperature}°`\n  }\n\n  function day() {\n    let date = new Date(props.data.dt * 1000);\n    let day = date.getDay();\n    let days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\n    return days[day];\n  }\n\n  return (\n    <div>\n      <div className=\"weather-forecact-day\">{day()}</div>\n      <WeatherIcon code={props.data.weather[0].icon} size={36}/>\n      <div className=\"forecast-temp\">\n        <span className=\"temp-max\">{maxTemperature()}</span> \n        <span className=\"temp-min\">{minTemperature()}</span>\n      </div>\n    </div>\n  );\n}","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport WeatherForecastDay from \"./WeatherForecastDay\";\n\nexport default function WeatherForecast(props) {\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  function load() {\n    let apiKey = \"ed0417bf8fecd4ab27286ed64422cb0b\";\n    let longitude = props.coordinates.lon;\n    let latitude = props.coordinates.lat;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  if (loaded) {\n   return (\n      <div className=\"weather-forecast\">\n          <div className=\"row\">\n            {forecast.map(function(dailyForecast, index) {\n              if(index < 5) {\n                return (\n                <div className=\"col\" key={index}>\n                  <WeatherForecastDay data={dailyForecast}/>\n                </div>\n                );\n              } else {\n                return null;\n              }\n            })}\n          </div>\n        </div>\n   )\n  } else {   \n    load();\n    return null;\n  }\n}","import React, { useState } from \"react\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport WeatherForecast from \"./WeatherForecast\";\nimport axios from \"axios\";\n\n\nexport default function Weather(props) {\n  const [weatherData, setWeatherData] = useState({ ready: false });\n  const [city, setCity] = useState(props.defaultCity);\n\n  function handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      coordinates: response.data.coord,\n      temperature: response.data.main.temp,\n      humidity: response.data.main.humidity,\n      date: new Date(response.data.dt * 1000),\n      description: response.data.weather[0].description,\n      icon: response.data.weather[0].icon,\n      wind: response.data.wind.speed,\n      city: response.data.name,\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleCityChange(event) {\n    setCity(event.target.value);\n  }\n\n  function search() {\n    const apiKey = \"ed0417bf8fecd4ab27286ed64422cb0b\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  if (weatherData.ready) {\n    return (\n      <div className=\"weather\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"row\">\n            <div className=\"col-9\">\n              <input\n                type=\"search\"\n                placeholder=\"Enter a city..\"\n                className=\"form-control\"\n                autoFocus=\"on\"\n                onChange={handleCityChange}\n              />\n            </div>\n            <div className=\"col-3\">\n              <input\n                type=\"submit\"\n                value=\"Search\"\n                className=\"btn btn-dark w-100\"\n              />\n            </div>\n          </div>\n        </form>\n        <WeatherInfo data={weatherData} />\n        <WeatherForecast coordinates={weatherData.coordinates} />\n      </div>\n    );\n  } else {\n    search();\n    return \"Loading...\";\n  }\n}\n","import React from \"react\";\n\nexport default function Link() {\n    return (\n        <a\n        className=\"link\"\n        href=\"https://github.com/ViktoriiaPavliukh/weather-react.git\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        >Open-source code by Viktoriia Pavliukh</a\n      >\n    )\n}","import React from \"react\"\nimport Weather from \"./Weather\";\nimport Link from './Link';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"weather-app\">\n      <main className=\"weather-main\">\n        <Weather defaultCity=\"Kyiv\" />\n      </main>\n      <footer className=\"weather-footer\">\n        <Link />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}